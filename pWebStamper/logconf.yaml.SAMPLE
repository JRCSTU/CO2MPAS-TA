
## Sample file with loggers used by co2mpas,
#  for facilitating configuring their levels.
#
#  You may copy it to ~/.co2_logconf.yaml and it will be loaded automatically,
#  or pass it with --logconf
#
version: 1

## https://fangpenlin.com/posts/2012/08/26/good-logging-practice-in-python/#capture-exceptions-and-record-them-with-traceback
disable_existing_loggers: false

root:
    level: INFO  # one of: DEBUG INFO WARNING ERROR FATAL
    #handlers: [console]
    #handlers: [wsgi]
    #handlers: [console, file]
    handlers:
        - file
          #- mail  # Not needed, using https://sentry.io

loggers:
    # co2mpas: {}
    # co2mpas_main: {}

    # co2dice: {}
    # co2mpas.sampling: {}
    # co2mpas.sampling.baseapp: {}
    # co2mpas.sampling.cfgcmd: {}
    # co2mpas.sampling.crypto: {}
    # co2mpas.sampling.project: {}
    # co2mpas.sampling.report: {}
    # co2mpas.sampling.tstamp: {}
    # co2mpas.sampling.tsigner: {}

    ## DICE libs:
    #
    # git: {}
    gnupg:
        level: INFO
    # socks: {}
    # traitlets: {}
    # transitions: {}

    # asyncio: {}
    # bcdocs: {}
    # boto3: {}
    # botocore: {}
    # concurrent: {}
    # dill: {}
    # future_stdlib: {}
    # pandalone: {}
    # pandalone.xleash: {}
    pandalone.xleash.io:
        level: WARNING
    # pandalone.xlsutils: {}
    # past: {}
    # py: {}
    # py.warnings: {}
    # requests: {}
    # s3fs: {}
    # s3transfer: {}
    # schedula: {}
    # wltp: {}

    ## WebSttamper libs
    #
    #webstamp:
    #    handlers: [mail]
    # flask_wtf
    # flask_wtf.csrf
    # werkzeug


formatters:
    long:
        format: "%(asctime)-15s:%(levelname)5.5s:%(name)s:%(message)s"

    ## For webstamp Flask app,
    #  from http://flask.pocoo.org/docs/dev/logging/#injecting-request-information
    req:
        class: webstamp.RequestFormatter
        format: >-
            %(asctime)s:%(remote_addr)s-->%(url)s:
                %(levelname)5.5s:%(name)12:12s:%(message)s

handlers:
    console:
        class: logging.StreamHandler
        formatter: long
        #level   : INFO
        #filters: [allow_foo]
        #stream  : ext://sys.stderr

    colored:
        class: rainbow_logging_handler.RainbowLoggingHandler
        stream: ext://sys.stderr
        formatter: long
        datefmt: '%Y-%m-%d %H:%M:%S'
        color_message_debug:    [grey, null, false]
        color_message_info:     [blue, null, false]
        color_message_warning:  [yellow, null, true]
        color_message_error:    [red, null, true]
        color_message_critical: [white, red, true]

    file:
        class : logging.handlers.RotatingFileHandler
        formatter: long
        filename: /home/ankostis/stamper.log
        mode: a
        ## 1 MB
        maxBytes: 1048576
        backupCount: 3

    ## From http://flask.pocoo.org/docs/dev/logging/#basic-configuration
    #wsgi:
    #    class:      logging.StreamHandler
    #    stream:     "ext://webstamp.wsgi_errors_stream()"
    #    formatter:  long
    #    level:      DEBUG

    ## See https://docs.python.org/3/library/logging.handlers.html#smtphandler
    mail:
        class:      logging.handlers.SMTPHandler
        level:      FATAL
        mailhost:   127.0.0.1
        fromaddr:   stamper@co2mpas.io
        toaddrs:
            - ankostis@gmail.com
        subject:    '!error@WebStamper!'
